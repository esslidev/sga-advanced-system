datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String         @id @default(uuid())
  role   UserRole @default(standard)
  CIN          String         @unique
  hashedPassword String 
  firstName    String
  lastName     String
  imageUrl     String?
  auditLogs    AuditLog[]
  sessions     Session[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
}

model Visitor {
  id        String    @id @default(uuid())
  CIN       String    @unique
  firstName String
  lastName  String
  visits    Visit[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Visit {
  id          String          @id @default(uuid())
  visitorId   String
  divisions   VisitDivision[]
  visitDate   DateTime        @default(now())
  visitReason String          @db.LongText
  visitor     Visitor         @relation(fields: [visitorId], references: [id], onUpdate: Cascade)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  deletedAt   DateTime?
}

model VisitDivision {
  id       String   @id @default(uuid())
  visitId  String
  division Division
  visit    Visit    @relation(fields: [visitId], references: [id], onDelete: Cascade)
}

// Audit Log Table for tracking all user actions
model AuditLog {
  id            String      @id @default(uuid())
  userId        String
  action        AuditAction
  metadata      Json?       // Store additional data as JSON
  user          User       @relation(fields: [userId], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Session {
  id        String   @id @default(uuid())
  userId    String   @unique
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

enum Division {
  division1
  division2
  division3
  division4
  division5
}

enum UserRole {
  standard
  admin
}

enum AuditAction {
  // Authentication
  SIGN_UP
  SIGN_IN
  SIGN_OUT
  
  // User management
  USER_DELETED
  
  // Visitor management
  VISITOR_CREATED
  VISITOR_UPDATED
  VISITOR_DELETED
  
  // Visit management
  VISIT_CREATED
  VISIT_UPDATED
  VISIT_DELETED
}